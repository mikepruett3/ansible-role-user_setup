---
- name: Check for existing Public key for user account '{{ user_account }}'
  stat:
    path: '{{ key_repository }}/{{ user_account_key }}'
  delegate_to: localhost
  register: key_file

- name: Create user account (Public Key exists) '{{ user_account }}'
  user:
    name: '{{ user_account }}'
    password: '{{ user_password_enc }}'
    comment: "{{ user_account }}"
    state: present
  when: key_file.stat.exists and key_file.stat.isreg

- name: Create user account (Public Key does not exists) '{{ user_account }}'
  user:
    name: '{{ user_account }}'
    password: '{{ user_password_enc }}'
    comment: "{{ user_account }}"
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa
    ssh_key_type: ed25519
    ssh_key_comment: "{{ user_account }}@{{ ansible_hostname }}"
    state: present
  when: not key_file.stat.exists

- name: Download user account SSH Private key '{{ user_account }}'
  fetch:
    src: '/home/{{ user_account }}/.ssh/id_rsa'
    dest: '{{ key_repository }}/{{ user_account }}@{{ ansible_hostname }}'
    flat: yes
  when: not key_file.stat.exists

- name: Download user account SSH Public key '{{ user_account }}'
  fetch:
    src: '/home/{{ user_account }}/.ssh/id_rsa.pub'
    dest: '{{ key_repository }}/{{ user_account }}@{{ ansible_hostname }}.pub'
    flat: yes
  when: not key_file.stat.exists

- name: Add user account SSH Public key to authorized_keys '{{ user_account }}'
  authorized_key:
    user: '{{ user_account }}'
    state: present
    key: "{{ lookup('file', '{{ key_repository }}/{{ user_account_key }}') }}"
